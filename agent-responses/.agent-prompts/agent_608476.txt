You are implementing Tasks 2 and 4 of the loot enrichment plan: Refactor CombatService to use MaterialRepository.findByIds().

## Task 2: Update generateLootFallback() Method

**File:** `/Users/silasrhyneer/Code/new-mystica/mystica-express/src/services/CombatService.ts`

**Location:** Lines 1505-1523 (the direct Supabase query for materials)

**What to Remove:**
This entire block (lines 1507-1523 in current code):
```typescript
let materialMap = new Map();
if (materialIds.length > 0) {
  const { data: materials_data, error } = await supabase
    .from('materials')
    .select('id, name, description, stat_modifiers')
    .in('id', materialIds);

  if (error) {
    throw new Error(`Failed to fetch materials: ${error.message}`);
  }

  materialMap = new Map((materials_data || []).map((m: any) => [m.id, m]));
  // ... logging code
}
```

**What to Replace With:**
```typescript
// Batch fetch Material details
const materials = materialIds.length > 0 ? await this.materialRepository.findByIds(materialIds) : [];
const materialMap = new Map(materials.map(m => [m.id, m]));

logger.debug('ðŸ§± Materials batch fetched', {
  requestedCount: materialIds.length,
  foundCount: materials.length,
  materials: materials.map(m => ({ id: m.id, name: m.name }))
});
```

**Important:**
- Keep all the material enrichment code (lines 1526-1541) exactly as-is
- Keep all the item enrichment code (lines 1562-1582) exactly as-is
- The error handling for missing materials (line 1530-1532) is already correctâ€”don't change
- Keep all existing logging statements
- Maintain exact same indentation and style as surrounding code

## Task 4: Verify/Update CombatService Constructor

**File:** `/Users/silasrhyneer/Code/new-mystica/mystica-express/src/services/CombatService.ts`

**What to Check:**
1. Find the CombatService constructor (early in file)
2. Check if `materialRepository` parameter exists and is stored
3. If missing:
   - Add to imports at top: `import { MaterialRepository } from '../repositories/MaterialRepository.js';`
   - Add parameter to constructor: `materialRepository: MaterialRepository,`
   - Add property assignment: `this.materialRepository = materialRepository;`
4. If exists, no changes needed

**Reference Pattern:**
Look for how `itemTypeRepository` is injected - use exact same pattern for materialRepository

## Requirements

- Material enrichment return objects keep all fields (lines 1526-1541)
- Item enrichment return objects keep all fields (lines 1562-1582)
- Error messages unchanged: "Material ${drop.material_id} not found..." and "ItemType ${drop.item_type_id} not found..."
- All logging statements preserved
- Type safety maintained
- No breaking changes to public method signatures
- Must compile: `pnpm build`

## Dependent On

Task 1 (MaterialRepository.findByIds()) must be implemented first.

## Result

After completion:
1. Build must pass: `pnpm build`
2. No direct Supabase queries in generateLootFallback() for materials
3. MaterialRepository is injected into CombatService
4. Same return object structure maintained
5. Error handling unchanged
6. Victory screen will receive enriched loot with all fields

Reference context: @agent-responses/agent_004070.md contains the full plan with exact line numbers.

Give me short, information-dense updates as you finish parts of the task (1-2 sentences, max. Incomplete sentences are fine). Only give these updates if you have important information to share. Prepend updates with: [UPDATE]